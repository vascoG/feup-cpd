In the second project you will develop a distributed key-value persistent store for a large cluster.

A key-value store is a simple storage system that stores arbitrary data objects, the values, each of which is accessed by means of a key, very much like in a hash table. To ensure persistency, the data items and their keys must be stored in persistent storage, e.g. a hard disk drive (HDD) or a solid state disk (SSD), rather than in RAM.

By distributed, we mean that the data items in the key-value store are partitioned among different cluster nodes.

Our design is loosely based on Amazon's Dynamo, in that it uses consistent-hashing to partition the key-value pairs among the different nodes. This will be described later, but we recommend that you read the paper, as it may give you ideas to solve some of the challenges you will find.

The service is expected be able to handle concurrent requests and to tolerate:

node crashes, and
message loss.
In addition to implement the data-store nodes, you are expected to implement a test client, also specified below.
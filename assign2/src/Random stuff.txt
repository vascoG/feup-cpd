2 programas:
	Store - servidor -> executa continuamente
	TestClient - para testar os comandos -> executa e termina

Cada comando Store invoca um servidor:
	ID -> 127.0.0.1 , 127.0.0.2, etc.,
	port -> igual em todos

Cada servidor tem uma tabela para saber as keys dos outros servidores. As keys são o hash baseado no ip.

Usar ThreadPool para fixar o nº de threads e temos uma fila de tarefas e vão sendo consumidas consoante os threads estão livres. 
	ThreadPoolExecuter executor = new ...
	executor.submit(<função>), isto execute a função ou coloca-a na fila se estiverem todos ocupados


Sincronização: Por exemplo put e um join ao mesmo tempo, o java já tem mecanismos de sincronização de threads.


Após o Store, o nó não pertence à rede, só após o JOIN através do TestClient

Multicast = de um para muitos

Guardar ficheiros através do put(<caminho do ficheiro>): lê ficheiro, criar hash key (string, já existe métodos em java) baseado no conteúdo do ficheiro, comunica a um servidor a chave. Se esse nó não é responsável por essa chave, manda para o nó responsável

O servidor tem uma pasta associada e dentro tem os ficheiros



------


0fe9bb6b02d4691169e233e9e6ba2535b1297e2a3fb4ab08d76640cd5edf317d - 172.0.0.4 - 0
4cf6a90bd6bf986c81e48f6e77ab5bc155811f48d522963c5d282ef986527ee6 - 172.0.0.2 - 0
95b02e637e79326243ef8b6d541df5ec89d3c5f468e6f4bb34bcda311fc5784f - 172.0.0.3 - 0
bf17252ece830bec20d39951393ee7e6f2097ceb12e411dbd1a1a60921bdf844 - 172.0.0.1 - 0




TODO: 
Message - MEMBERSHIP
MEMBERSHIP - Sleep dinamico para aumentar probabilidade(nao testado) 32 mais recentes?
LEAVE caso conexao de PUT/GET/DELETE falhe


References : https://www.javatpoint.com/binary-tree-java   ,   https://www.geeksforgeeks.org/binary-search-tree-set-2-delete/